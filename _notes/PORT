OTHER TODO
---

change all type hints of boolean -> bool
                         integer -> int

ISSUES THAT REMAIN
-------------------
1.
The delegated methods specializing the Node::cloneNode and Node::isEqual
are really annoying.

Sometimes behavior is overridden by a later class extension, sometimes
they are left up to the parent, and sometimes the parent's behavior is
controlled by setting a parameter value on the child.

This is all somewhat confusing to a first-time reader. We should either
decide on one way to do it (e.g. abstract methods) or just leave it.
For now, i'm leaving it.

2.
Confusing indexes.

Node::__index() / _index is the index of a node
in its parent's childNodes list (i.e. it's sibling index).

Node::___nid gives the node's index in its owner Document.



IN FUTURE: USE THE PHP IMMUTABLE RFC IF IT IS ADOPTED!
======================================================

CONVENTIONS:
------------
* When referring to PHP class/DOM interface/tags in documents, with a
  few exceptions (e.g. Attr <=> attribute), the class/interface and the
  thing its represented have the same name.

  Always use the capitalized version to refer to the class/interface,
  and a lowercase one to refer to the "thing".

        Element = class or interface
        element = the "thing" that an Element is representing

* GO BACK ON THIS:

  Wait for a PHP-immutable RFC to come into force. Until then, just use
  properties and tell callers in the documentation that these are value
  objects and don't mess with them unless you want to get undefined
  behavior.

  All properties on the DOM interfaces are to be implemented using:
        - a class method with the name of the DOM property
        - a class property with the name of the DOM property prefixed with '_'

        (read-only property)

                class Node {
                        private $_ownerDocument;
                        public function ownerDocument()
                        {
                                return $this->_ownerDocument;
                        }
                }

        (read-write property)

                class Attr {
                        private $_value;
                        public function value(string $v = NULL)
                        {
                                if ($v === NULL) {
                                        /* GET */
                                        return $this->_value;
                                } else {
                                        /* SET */
                                        $this->_value = $v;
                                }
                        }
                }

* [TODO: work on]
  Conventions for functions not in the DOM interface:
        - DOMO extensions mark with     _domo_*
        - Helper functions mark with    _helper_*
        - Delegate functions mark with  _subclass_*

* If a method or property is not supported in the latest DOM4-LS spec,
  remove it. This is a clean start.

* UNFORTUNATELY the spec defines the use of getters and setters, implicit
  access to object members like Element.id, and so on.

  In JavaScript and Java, the two official implementations, this is a
  language feature, however in PHP7 it is a little bit more complicated.

  PHP7 also does not support read-only property values, making the use
  of accessors even more necessary.

  For both of these reasons, we have chosen the non-performant use of
  the magic methods __get() and __set() for these properties. We will
  evaluate and see if we should deviate from spec after measuring the
  performance. Hopefully in the future PHP will have support for either
  read-only attributes or performant accessors.

==============================================================================

NOTES:

Read-only/read-write and mutable/immutable

These are not equivalent, though it seems at first they might be.

        Immutable <=> read-only
        Read-write => mutable

But

        mutable =/> read-write

For example, on an Attr object, ownerElement is a read-only property,
but it can still change if I associate the Attr node with another
element.

For another example, the name property of an attribute is read-only,
but the prefix property is read-write, and since I can mutate the prefix
property, I can mutate the name (which includes this prefix), thus
making the name property mutable, even if it's read-only.

Basically, there are properties where even if you can't update them
directly, you can update something that is used to compute their value.

Interesting!


==============================================================================

POTENTIAL UPSTREAM BUGS:
----------------------
        (xmlnames.js)
        var simplename = /^[_:A-Za-z][-.:\w]+$/;

        According to the spec, rather than a '+' there should be a '*',
        since we do not necessarily have to follow the initial character.

        The reason nobody has noticed this is that in JS, the \w is matching
        the string terminating \n character, but we should not rely on this.

        ---

        in Document._recursiveRoot, why are we only recursing on
        Element nodes? In Document._recursiveUproot, why are we
        not recursing on only Element nodes?

        ---

        createProcessingInstruction (Document.js):
                if (!xml.isValidName(target) || data.indexOf("?>") !== -1) {
                        utils.InvalidCharacterError()
                }

                Should it be !== -1, or === -1? I think it's === -1, yes?

        ---

        _isClick (EventTarget.js):
                Math.abs(event.clientY - this._armed.Y) < 10;

                Should be 'this._armed.y', not 'this._armed.Y'

        ---

        write (Document.js)

        we pass in 'args', but then run s = 'arguments'.join(''), which
        I don't think is what we meant to do...

        ---

        doctype (Document.js)

        Why are we assigning a Document or Node to something that is
        supposed to be a DocumentType ?

        ---

        _setAttribute (Element.js)

        Adding the attr to the ._attributes array happens regardless
        of whether it's new or not. This is not the case for _setAttributeNS,
        why?


PORT CHANGES:
--------------
* NavigationID, History, Console, and Location all merged into Window.php

* Window, Event, MouseEvent, UIEvent, and EventTarget should all be
  turned into stubs, or supported only in "interactive/browsing mode".

* Do we need to support Events and MutationObserver stuff?

* CANDIDATES FOR REMOVAL:
*       * event stuff
*       * nodeiterator
*       * treewalker
*       * mutation



CONVENTIONS:
--------------
* Use namespaces to encapsulate
        * '\DOM' for the whole library, change later to be more distinct

* The core DOM classes that map to w3c defined interfaces should be
  kept distinct somehow from helper or utility pages.
        * place in a '\<root>\DOM' namespace?
        * name files 'DOM_<class>' or 'DOM1_<class>' and so on?

* Decide on how to structure class inheritence; the DOM spec has more than
  a few inheritances.

* Decide where to use classes, abstract classes, interfaces

* use 'declare( strict_types = 1 )' and use with PHP7 type hinting

* free to use PHP7 features

* Arrange files in a directory structure at first, then map to
  namespaces once you find something that hits the right balance.

* WMF projects typically have class loading handled by composer, but
  since we already have the require() tree in the node library, maybe
  we will just do it using PHP require() or require_once(), and check
  performance, then move to an autoloader if things look grim.

  I just don't want the autoloader to cause a perf regression somehow.

* What to do about methods we don't support?
  If we implement the OOP as interfaces and concrete or abstract classes
  with those interfaces, then should we only include methods and props that
  we support, or should we stub each of them with a stub value or stub
  method that throws an exception on access?

* Sub-objects or sub-interfaces that only exist as properties on a top-level
  DOM object (e.g. History and Console are always associated to a Window)
  will be defined alongside that class in the class's code page.

* All read-only properties are implemented as getter methods, with the
  actual value being stored in a property with _ prepended, e.g.
        public function ownerDocument() { return $this->_ownerDocument; }

==============================================================================
C. Scott's list of all domino top-level methods (those not called internally
by domino) called by parsoid when running npm run parser tests.

First col is number of dynamic invocations,
second col is the method,
third col is equivalent PHP function (if any known).

904578  Attr#name[get]                                  DOMAttr->name
1479526 Attr#value[get]                                 DOMAttr->value
680801  AttributesArray#item                            -
517723  AttributesArray#length[get]                     -
83      CharacterData#nextElementSibling[get]           -
172     CharacterData#previousElementSibling[get]       -
7       CharacterData#replaceWith                       -
68618   Comment#data[get]                               DOMComment->data
85524   Comment#nodeName[get]                           DOMComment->nodeName
7990    Comment#nodeValue[get]                          DOMComment->nodeValue
831     Comment#textContent[get]                        DOMComment->textContent
1377098 ContainerNode#childNodes[get]                   ->childNodes
2654478 ContainerNode#firstChild[get]                   ->firstChild
334933  ContainerNode#hasChildNodes                     DOMNode::hasChildNodes()
286212  ContainerNode#lastChild[get]                    DOMNode->lastChild
25500   DOMTokenList#add                                -
14375   DOMTokenList#contains                           -
8028    DOMTokenList#length[get]                        -
8       DOMTokenList#remove                             -
378489  Document#body[get]                              -
6761    Document#createComment                          DOMDocument::createComment
627     Document#createDocumentFragment                 DOMDocument::createDocumentFragment
132924  Document#createElement                          DOMDocument::createElement
68069   Document#createTextNode                         DOMDocument::createTextNode
5526    Document#getElementById                         DOMDocument::getElementById (but probably broken)
39226   Document#head[get]                              -
1625    Document#importNode                             DOMDocument::importNode
23860   Document#nodeName[get]                          DOMDocument->nodeName
9       Document#querySelector                          -
4896    Document#querySelectorAll                       -
3564    Document#title[set]                             -
100     DocumentFragment#nodeName[get]                  DOMDocumentFragment->nodeName
517783  Element#attributes[get]                         -
43992   Element#classList[get]                          -
1175    Element#clone                                   - (but DOMNode::cloneNode exists)
11374982        Element#getAttribute                    DOMElement::getAttribute
27437   Element#hasAttribute                            DOMElement::hasAttribute
1993    Element#lastElementChild[get]                   -
125     Element#nextElementSibling[get]                 -
12463819        Element#nodeName[get]                   DOMElement->nodeName
1       Element#nodeValue[get]                          DOMElement->nodeValue
218223  Element#outerHTML[get]                          -
2931    Element#previousElementSibling[get]             -
10250   Element#querySelector                           -
7241    Element#querySelectorAll                        -
208     Element#remove                                  -
1013675 Element#removeAttribute                         DOMElement::removeAttribute
271457  Element#setAttribute                            DOMElement::setAttribute
253857  Element#tagName[get]                            -
39251   Element#textContent[get]                        DOMElement->textContent
11      Element#textContent[set]                        DOMElement->textContent
48      FilteredElementList#length[get]                 -
480     HTMLElement#innerHTML[get]                      -
684     HTMLElement#innerHTML[set]                      -
4896    HTMLParser.document                             -
108989  HTMLParser.insertToken                          -
90523   Leaf#childNodes[get]                            DOMNode->childNodes
490041  Leaf#firstChild[get]                            DOMNode->firstChild
16235   Leaf#hasChildNodes                              DOMNode::hasChildNodes()
36427   Node#COMMENT_NODE[get]                          unk
1062    Node#DOCUMENT_NODE[get]                         unk
386862  Node#ELEMENT_NODE[get]                          unk
191251  Node#TEXT_NODE[get]                             unk
64121   Node#appendChild                                DOMNode::appendChild
4652    Node#cloneNode                                  DOMNode::cloneNode
109101  Node#insertBefore                               DOMNode::insertBefore
5657206 Node#nextSibling[get]                           DOMNode->nextSibling
52988   Node#normalize                                  DOMNode::normalize (but check performance)
7717    Node#parentElement[get]                         -
1846921 Node#previousSibling[get]                       DOMNode->previousSibling
44631   Node#removeChild                                DOMNode::removeChild
54041   Node#replaceChild                               DOMNode::replaceChild
240206  Text#data[get]                                  DOMText->data
47662   Text#data[set]                                  DOMText->data
1909670 Text#nodeName[get]                              DOMText->nodeName
1021897 Text#nodeValue[get]                             DOMText->nodeValue
49      Text#nodeValue[set]                             DOMText->nodeValue
40087   Text#textContent[get]                           DOMText->textContent
26      Text#textContent[set]                           DOMText->textContent
121906  domino.createDocument                           -
1       domino.createWindow                             -
13356   impl.HTMLParser                                 -

==============================================================================

Classes breakdown:
        Book-keeping interfaces:
        ~~~~~~~~~~~~~~~~~~~~~~~~
                events  (include Event, UIEvent, MouseEvent, CustomEvent at once)
                index   (main interface)
                impl    (include all the DOM stuff:
                                include utils
                                export CSSStyleDeclaration
                                       CharacterData
                                       Comment
                                       DOMException
                                       DOMImplementation
                                       DOMTokenList
                                       Document
                                       DocumentFragment
                                       DocumentType
                                       Element
                                       HTMLParser
                                       NamedNodeMap
                                       Node
                                       NodeList
                                       NodeFilter
                                       ProcessingInstruction
                                       Text
                                       Window

                               utils.merge(exports, events);
                               utils.merge(exports, htmlelts.elements);
                               utils.merge(exports, svg.elements);
                )

        Stuff that's been ported separately:
        ~~~~~~~~~~~~~~~
                select
                HTMLParser

        Utility interfaces:
        ~~~~~~~~~~~~~~~
                attributes.js
                config.js
                cssparser.js
                CSSStyleDeclaration
                defineElement
                Leaf
                LinkedList
                Location
                MutationConstants
                NavigatorID
                NodeTraversal
                NodeUtils
                sloppy
                utils
                URLUtils
                WindowTimers
                xmlnames


        DOM Interface generators
        ~~~~~~~~~~~~~~~
                svg
                htmlelts

        DOM Interfaces (indents mean they are not implemented in domino):
        ~~~~~~~~~~~~~~~
                Attr
                        CDATASection
                CharacterData
                ChildNode
                Comment
                CustomEvent
                Document
                DocumentFragment
                DocumentType
                        DOMError
                DOMException
                DOMImplementation
                        DOMString
                        DOMTimeStamp
                        DOMStringList
                DOMTokenList
                Element
                Event
                EventTarget
                        HTMLCollection
                        MutationObserver
                        MutationRecord
                NamedNodeMap
                Node
                NodeFilter
                NodeIterator
                NodeList
                NonDocumentTypeChildNode
                        ParentNode
                ProcessingInstruction
                        Selection (select.js?)
                        Range
                Text
                        TextDecoder
                        TextEncoder
                        TimeRanges
                TreeWalker
                URL
                Window
                        Worker
                        XMLDocument



original                        port
==============================================================================
attributes                      x
------------------------------------------------------------------------------
CharacterData
------------------------------------------------------------------------------
ChildNode
------------------------------------------------------------------------------
Comment
------------------------------------------------------------------------------
ContainerNode                   x (merged into Node)
------------------------------------------------------------------------------
config
------------------------------------------------------------------------------
CSSStyleDeclaration
------------------------------------------------------------------------------
CustomEvent
------------------------------------------------------------------------------
defineEvent
------------------------------------------------------------------------------
Document
------------------------------------------------------------------------------
DocumentFragment
------------------------------------------------------------------------------
DocumentType
------------------------------------------------------------------------------
DOMException
------------------------------------------------------------------------------
DOMImplementation               x
------------------------------------------------------------------------------
DOMTokenList
------------------------------------------------------------------------------
Element
------------------------------------------------------------------------------
Event                           x
------------------------------------------------------------------------------
events
------------------------------------------------------------------------------
EventTarget                     x
------------------------------------------------------------------------------
FilteredElementList
------------------------------------------------------------------------------
htmlelts
------------------------------------------------------------------------------
HTMLParser
------------------------------------------------------------------------------
impl
------------------------------------------------------------------------------
index.d
------------------------------------------------------------------------------
index
------------------------------------------------------------------------------
Leaf
------------------------------------------------------------------------------
LinkedList                      x
------------------------------------------------------------------------------
Location                        x
------------------------------------------------------------------------------
MouseEvent                      x
------------------------------------------------------------------------------
MutationConstants
------------------------------------------------------------------------------
NamedNodeMap
------------------------------------------------------------------------------
NavigatorID                     x
------------------------------------------------------------------------------
Node                            x
------------------------------------------------------------------------------
NodeFilter
------------------------------------------------------------------------------
NodeIterator
------------------------------------------------------------------------------
NodeList.es5                    n/a
------------------------------------------------------------------------------
NodeList.es6                    x
------------------------------------------------------------------------------
NodeList                        x
------------------------------------------------------------------------------
NodeTraversal
------------------------------------------------------------------------------
NodeUtils                       x
------------------------------------------------------------------------------
NonDocumentTypeChildNode
------------------------------------------------------------------------------
ProcessingInstruction
------------------------------------------------------------------------------
select                          n/a
------------------------------------------------------------------------------
sloppy
------------------------------------------------------------------------------
svg
------------------------------------------------------------------------------
Text
------------------------------------------------------------------------------
TreeWalker
------------------------------------------------------------------------------
UIEvent                         x
------------------------------------------------------------------------------
URL
------------------------------------------------------------------------------
URLUtils
------------------------------------------------------------------------------
utils
------------------------------------------------------------------------------
Window                          x/2
------------------------------------------------------------------------------
WindowTimers
------------------------------------------------------------------------------
xmlnames

